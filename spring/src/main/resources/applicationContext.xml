<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!--加载所需的system.properties文件-->
    <context:property-placeholder
            ignore-resource-not-found="true"
            location="classpath:sca.properties,classpath:redis/redis.properties"
            ignore-unresolvable="true"/>

<!--    启动项目需要注释-->
<!--    <import resource="classpath*:acl-context.xml"/>-->

    <!--service 扫描 ，事务管理-->
    <import resource="classpath:spring/spring-service.xml"/>

    <!--数据源配置，扫描mapper-->
    <!--    启动项目需要注释-->
    <!--    <import resource="classpath:spring/spring-dao.xml"/>-->
    <!--启用aop-->
    <import resource="classpath:spring/spring-aop.xml"/>

    <import resource="classpath:spring/spring-quartz.xml"/>

<!--    <import resource="classpath:dubbo-consumer.xml"/>-->

    <!--引入spring Security 配置文件-->
<!--    <import resource="classpath:spring/spring-security.xml"/>-->
    <!--邮件模板 freemark-->
    <import resource="classpath:spring/spring-freemark.xml"/>
    <!--工作流 activiti-->
    <!--<import resource="classpath:activiti/activiti.cfg.xml"/>-->


    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory"   ref="jedisConnFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
        </property>
    </bean>

    <!--    <bean id="jedisConnFactory"-->
    <!--          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
    <!--          p:host-name="${redis.host}"-->
    <!--          p:port="${redis.port}"-->
    <!--          p:poolConfig-ref="poolConfig"-->
    <!--          p:use-pool="true"/>-->
    <bean id="jedisConnFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="usePool" value="true" />
        <property name="timeout" value="${redis.timeout}"></property>
        <property name="poolConfig" ref="poolConfig" />
        <property name="password" value="${redis.password}" />
    </bean>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--最大空闲连接数-->
        <property name="maxIdle" value="${redis.maxIdle}"></property>
        <property name="maxWaitMillis" value="${redis.maxWait}"></property>
        <property name="maxTotal" value="${redis.maxActive}"></property>
    </bean>


    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="3" />
        <property name="maxPoolSize" value="1000" />
        <property name="queueCapacity" value="2147483647" />
    </bean>

    <!-- 缺省的异步任务线程池 -->
    <task:annotation-driven executor="asyncExecutor" />
    <task:executor id="asyncExecutor" pool-size="100-10000" queue-capacity="10" />


    <context:component-scan base-package="spring.*" />
</beans>
